@model PaginatedList<CapstoneCRM.Models.Customer>

@{
    ViewData["Title"] = "Customers";
}

<h2>Customers</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search by keyword: <input type="text" name="SearchString" value=@ViewData["currentFilter"] />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<div class="p-3">
    <form asp-action="get">
        <button class="btn btn-dark btn-sm shadow-sm p-3" type="submit" asp-controller="Customer" asp-action="Create">Add New</button>
    </form>
</div>
<table class="table table-striped table-hover table-dark">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Business Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CitySort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">City</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StateSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">State</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ClassSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Class</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PersonSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sales Person</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BusinessName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssignedEmployee.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurretFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurretFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
